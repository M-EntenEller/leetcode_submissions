{"id":1115996601,"question_id":1770,"lang":"java","lang_name":"Java","time":"3 months, 2 weeks","timestamp":1702154891,"status":10,"status_display":"Accepted","runtime":"54 ms","url":"/submissions/detail/1115996601/","is_pending":"Not Pending","title":"Minimum Deletions to Make Character Frequencies Unique","memory":"44.8 MB","code":"class Solution {\n    public int minDeletions(String s) {\n\n        int res = 0;\n        Map<Character,Integer> countMap = new HashMap<>();\n\n        for (int i=0; i<s.length(); i++)\n        {\n            Integer tmp = countMap.get(s.charAt(i));\n\n            if (tmp == null){\n                countMap.put(s.charAt(i), 1);\n            } else {\n                countMap.put(s.charAt(i), tmp + 1);\n            }\n        } \n\n        List<Integer> frequencies = countMap.values().stream().collect(Collectors.toList());\n        Collections.sort(frequencies);\n\n        for (int i=frequencies.size() - 2; i >= 0; i--)\n        {\n            int l = frequencies.get(i);\n            int r = frequencies.get(i+1);\n            int delta = l - r;\n\n            if (delta >= 0){\n                int cut = Math.min(l, delta + 1);\n                frequencies.set(i, l-cut);\n                res += cut;\n            } \n            \n        }\n\n        return res;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-deletions-to-make-character-frequencies-unique","has_notes":false,"flag_type":1}