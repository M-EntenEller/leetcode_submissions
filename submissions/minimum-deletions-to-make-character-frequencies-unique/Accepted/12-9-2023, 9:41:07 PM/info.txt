{"id":1115993702,"question_id":1770,"lang":"java","lang_name":"Java","time":"3 months, 2 weeks","timestamp":1702154467,"status":10,"status_display":"Accepted","runtime":"53 ms","url":"/submissions/detail/1115993702/","is_pending":"Not Pending","title":"Minimum Deletions to Make Character Frequencies Unique","memory":"44.7 MB","code":"class Solution {\n    public int minDeletions(String s) {\n\n        int res = 0;\n        Map<Character,Integer> countMap = new HashMap<>();\n\n        for (int i=0; i<s.length(); i++)\n        {\n            Integer tmp = countMap.get(s.charAt(i));\n\n            if (tmp == null){\n                countMap.put(s.charAt(i), 1);\n            } else {\n                countMap.put(s.charAt(i), tmp + 1);\n            }\n        } \n\n        int[] frequencies = new int[countMap.size()];\n        int idx = 0;\n\n        for (Integer x: countMap.values())\n        {\n            frequencies[idx++] = (int) x;\n        }\n\n        Arrays.sort(frequencies);\n\n        for (int i=frequencies.length - 2; i >= 0; i--)\n        {\n            int delta = frequencies[i] - frequencies[i+1];\n\n            if (delta >= 0){\n                int cut = Math.min(frequencies[i], delta + 1);\n                frequencies[i] -= cut;\n                res += cut;\n            } \n            \n        }\n\n        return res;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-deletions-to-make-character-frequencies-unique","has_notes":false,"flag_type":1}