{"id":1061294929,"question_id":2442,"lang":"python3","lang_name":"Python3","time":"6Â months","timestamp":1695895988,"status":10,"status_display":"Accepted","runtime":"46 ms","url":"/submissions/detail/1061294929/","is_pending":"Not Pending","title":"Number of Arithmetic Triplets","memory":"16.1 MB","code":"class Solution:\n    def arithmeticTriplets(self, nums: List[int], diff: int) -> int:\n\n        res = 0\n        n = len(nums)\n        seen = set()\n\n        i = n-1\n        while i >= 0:\n\n            if (nums[i] + diff) in seen and (nums[i] + 2*diff) in seen:  \n                res += 1\n\n            seen.add(nums[i])\n            i -= 1    \n\n        return res\n            \n            \n            \n\n        \n                    \n        ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-arithmetic-triplets","has_notes":false,"flag_type":1}