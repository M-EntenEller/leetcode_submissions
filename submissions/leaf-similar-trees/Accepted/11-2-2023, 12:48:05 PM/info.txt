{"id":1089835818,"question_id":904,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1698925685,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1089835818/","is_pending":"Not Pending","title":"Leaf-Similar Trees","memory":"41.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n\n    private int[] mergeArrays(int[] a, int[] b){\n        int[] res = new int[a.length + b.length];\n        for(int i=0; i<a.length; i++){\n            res[i] = a[i];\n        }\n        for (int i=a.length; i<b.length + a.length; i++){\n            res[i] = b[i-a.length];\n        }\n        return res;\n    }\n\n    private int[] leafSequence(TreeNode root){\n        \n        if (root==null){\n            return new int[0];\n        }\n\n        if (root.left == null && root.right == null){\n            return new int[]{root.val};\n        }\n\n        return mergeArrays(leafSequence(root.left), leafSequence(root.right));\n    }\n\n    public boolean leafSimilar(TreeNode root1, TreeNode root2) {\n\n        int[] l = leafSequence(root1);\n        int[] r = leafSequence(root2);\n\n        if (l.length != r.length){\n            return false;\n        } \n\n        for (int i=0; i<l.length; i++){\n\n            if (l[i] != r[i]){\n                return false;\n            }\n\n        }\n        \n        return true;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111","title_slug":"leaf-similar-trees","has_notes":false,"flag_type":1}