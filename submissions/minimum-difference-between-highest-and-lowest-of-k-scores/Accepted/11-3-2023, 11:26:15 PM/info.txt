{"id":1090914437,"question_id":2112,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1699050375,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/1090914437/","is_pending":"Not Pending","title":"Minimum Difference Between Highest and Lowest of K Scores","memory":"43.6 MB","code":"class Solution {\n    public int minimumDifference(int[] nums, int k) {\n\n        Arrays.sort(nums);\n        int diff = nums[k-1] - nums[0];\n        int tmp;\n\n        for(int i=0; i<nums.length - k + 1; i++){\n\n            tmp = nums[i+k-1] - nums[i];\n\n            if (tmp < diff){\n                diff = tmp;\n            }\n\n        }\n\n        return diff;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-difference-between-highest-and-lowest-of-k-scores","has_notes":false,"flag_type":1}