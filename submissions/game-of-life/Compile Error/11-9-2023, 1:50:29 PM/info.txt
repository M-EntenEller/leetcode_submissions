{"id":1095204255,"question_id":289,"lang":"java","lang_name":"Java","time":"4 months, 2 weeks","timestamp":1699534229,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1095204255/","is_pending":"Not Pending","title":"Game of Life","memory":"N/A","code":"class Solution {\n\n    private int updateDeadCell(int numNeighbors, int cellVal){\n\n\n        System.out.println(\"dead returning \");\n        System.out.println(numNeighbors == 3 ? 1 : 0);\n        return numNeighbors == 3 ? 1 : 0;\n\n    }\n\n    private int updateLiveCell(int numN, int cellV){\n\n        if (numN < 2){\n            return 0;\n        }\n        if (numN < 4){\n            System.out.println(\"update returning 1\");\n            return 1;\n        }\n        return 0;\n\n    }\n\n    private int updateCell(int numN, int cellV){\n\n        if (cellV == 1){\n            return updateLiveCell(numN, cellV);\n        }\n        return updateDeadCell(numN, cellV);\n\n    }\n\n    private int getNumNeighbors(int[][] arr, int i, int j){\n\n        System.out.println(\"neighbors: \");\n        System.out.print(\"i,j = \");\n        System.out.print(i);\n        System.out.print(\" \");\n        System.out.println(j);\n        \n        int count = 0; \n\n        for (int r=i-1; r <= i+1; r++){\n\n            if (r < 0 || r > arr.length-1){\n                continue;\n            }\n\n            for (int c=j-1; c <= j+1; c++){\n\n                if(c < 0 || c > arr[0].length-1){\n                    continue;\n                }\n                if (r==i && c==j){\n                    continue;\n                }\n\n                if (arr[r][c] == 1){\n                    count++;\n                }\n\n            }\n\n        }\n\n        System.out.println(count);\n        return count;\n\n    }\n\n    public void gameOfLife(int[][] board) {\n\n        int[][] res = new int[board.length][board[0].length];\n        \n        for (int i=0; i<board.length; i++){\n\n            for(int j=0; j<board[0].length; j++){\n\n                res[i][j] = updateCell(getNumNeighbors(board, i,j), board[i][j]);\n                System.out.println(\"new res i,j\");\n                System.out.println(i);\n                System.out.println(count);\n\n            }\n\n        }\n\n        board = res;\n        return;\n\n    }\n}","compare_result":null,"title_slug":"game-of-life","has_notes":false,"flag_type":1}