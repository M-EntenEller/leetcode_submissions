{"id":1044730917,"question_id":799,"lang":"python3","lang_name":"Python3","time":"6 months, 2 weeks","timestamp":1694265650,"status":10,"status_display":"Accepted","runtime":"39 ms","url":"/submissions/detail/1044730917/","is_pending":"Not Pending","title":"Minimum Distance Between BST Nodes","memory":"16.6 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def minDiffInBST(self, root: Optional[TreeNode]) -> int:\n\n        def min_diff(root, seen):\n\n            if root == None:\n                return None\n\n            m = None\n\n            for x in seen:\n\n                diff = abs(root.val - x)\n\n                if m == None or diff < m:\n                    m = diff\n\n            new_seen = seen.copy()\n            new_seen.add(root.val)\n            candidates = [m, \n                          min_diff(root.left, new_seen), \n                          min_diff(root.right, new_seen)]\n\n            return min([x for x in candidates if x])\n\n        return min_diff(root, set())\n            \n                \n\n\n            \n\n\n\n        \n\n    \n        ","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"minimum-distance-between-bst-nodes","has_notes":false,"flag_type":1}