{"id":1040303126,"question_id":924,"lang":"python3","lang_name":"Python3","time":"6 months, 3 weeks","timestamp":1693833501,"status":10,"status_display":"Accepted","runtime":"336 ms","url":"/submissions/detail/1040303126/","is_pending":"Not Pending","title":"Fair Candy Swap","memory":"18.7 MB","code":"class Solution:\n    def fairCandySwap(self, aliceSizes: List[int], bobSizes: List[int]) -> List[int]:\n\n        r = (sum(aliceSizes) - sum(bobSizes)) / 2 \n        \n        _m = {}\n        for box in bobSizes:    \n            _m[box + r] = box  \n\n        for box in aliceSizes:\n            match = _m.get(box)\n            if match:\n                return [box, match]\n\n                \n\n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"fair-candy-swap","has_notes":false,"flag_type":1}