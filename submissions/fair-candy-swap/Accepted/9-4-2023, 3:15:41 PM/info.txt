{"id":1040301269,"question_id":924,"lang":"python3","lang_name":"Python3","time":"6 months, 3 weeks","timestamp":1693833341,"status":10,"status_display":"Accepted","runtime":"309 ms","url":"/submissions/detail/1040301269/","is_pending":"Not Pending","title":"Fair Candy Swap","memory":"18.6 MB","code":"class Solution:\n    def fairCandySwap(self, aliceSizes: List[int], bobSizes: List[int]) -> List[int]:\n\n        na = len(aliceSizes)\n        nb = len(bobSizes)\n\n        sA = sum(aliceSizes)\n        sB = sum(bobSizes)\n\n        r = (sA - sB) / 2 \n        \n        _m = {}\n        for i in range(nb):\n            box_i = bobSizes[i]\n            _m[box_i + r] = box_i  \n\n        for i in range(na):\n            box_i = aliceSizes[i]\n            match = _m.get(box_i)\n            if match:\n                return [box_i, match]\n\n                \n\n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"fair-candy-swap","has_notes":false,"flag_type":1}