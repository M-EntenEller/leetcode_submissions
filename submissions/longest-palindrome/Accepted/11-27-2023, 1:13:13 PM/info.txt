{"id":1107403125,"question_id":409,"lang":"java","lang_name":"Java","time":"4Â months","timestamp":1701087193,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/1107403125/","is_pending":"Not Pending","title":"Longest Palindrome","memory":"40.7 MB","code":"class Solution {\n    public int longestPalindrome(String s) {\n\n        Map<Character, Integer> countMap = new HashMap<>();\n        int oddCount = 0;\n        int longest = 0;\n        int rest = 0; \n\n        for (char c : s.toCharArray())\n        {\n            if (countMap.get(c) == null)\n            {\n                countMap.put(c, 1);\n            }\n            else\n            {\n                countMap.put(c, countMap.get(c) + 1);\n            }\n            if (countMap.get(c) % 2 == 0)\n            {\n                oddCount--;\n            }\n            else\n            {\n                oddCount++;\n            }\n        }\n\n        if (oddCount > 0){\n            return s.length() - oddCount + 1; \n        }\n\n        return s.length();\n\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindrome","has_notes":false,"flag_type":1}