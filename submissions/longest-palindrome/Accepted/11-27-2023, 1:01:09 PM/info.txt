{"id":1107397793,"question_id":409,"lang":"java","lang_name":"Java","time":"4Â months","timestamp":1701086469,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/1107397793/","is_pending":"Not Pending","title":"Longest Palindrome","memory":"40.9 MB","code":"class Solution {\n    public int longestPalindrome(String s) {\n\n        Map<Integer, Integer> countMap = new HashMap<>();\n        boolean uneven = false;\n        int longest = 0;\n        int rest = 0; \n\n        s.chars().forEach((c)->{\n            if (countMap.get(c) == null)\n            {\n                countMap.put(c, 1);\n            }\n            else\n            {\n                countMap.put(c, countMap.get(c) + 1);\n            }\n        });\n\n        for (var c : countMap.values())\n        {\n            if (c == 0)\n            {\n                continue;\n            }\n\n            if ((rest = c % 2) == 1)\n            {\n                uneven = true;\n            }\n\n            longest += c-rest;\n        }\n\n        return longest + (uneven ? 1 : 0);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindrome","has_notes":false,"flag_type":1}