{"id":1107388115,"question_id":409,"lang":"java","lang_name":"Java","time":"4Â months","timestamp":1701085199,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1107388115/","is_pending":"Not Pending","title":"Longest Palindrome","memory":"40.7 MB","code":"class Solution {\n    public int longestPalindrome(String s) {\n\n        char[] countMap = new char[128];\n        boolean uneven = false;\n        int longest = 0;\n\n        s.chars().forEach(c->countMap[c]++);\n\n        for(char c: countMap)\n        {\n            if (c == 0)\n            {\n                continue;\n            }\n            \n            int rest = c % 2;\n\n            if (rest == 1)\n            {\n                uneven =true;\n            }\n\n            longest += c-rest;\n\n        }\n        \n        return longest + (uneven ? 1 : 0);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindrome","has_notes":false,"flag_type":1}