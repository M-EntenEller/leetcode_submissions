{"id":1091428506,"question_id":2005,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1699118817,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1091428506/","is_pending":"Not Pending","title":"Check if All the Integers in a Range Are Covered","memory":"40.5 MB","code":"class Solution {\n    public boolean isCovered(int[][] ranges, int left, int right) {\n\n        Set<Integer> covered = new HashSet<>();\n\n        for (int i=0; i<ranges.length; i++){\n            \n            int lower = left < ranges[i][0] ? ranges[i][0] : left;\n            int upper = right > ranges[i][1] ? ranges[i][1] : right;\n\n            for (int j=lower; j<=upper; j++){\n                covered.add(j);\n            }\n\n            if (covered.size() == right-left+1){\n                return true;\n            }\n        \n        }\n\n        return false;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"check-if-all-the-integers-in-a-range-are-covered","has_notes":false,"flag_type":1}