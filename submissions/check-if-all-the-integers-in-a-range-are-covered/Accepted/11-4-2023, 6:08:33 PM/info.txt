{"id":1091415947,"question_id":2005,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1699117713,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1091415947/","is_pending":"Not Pending","title":"Check if All the Integers in a Range Are Covered","memory":"40.4 MB","code":"class Solution {\n    public boolean isCovered(int[][] ranges, int left, int right) {\n\n        HashSet<Integer> covered = new HashSet<>();\n        int i=0;\n        int[][] nums = ranges;\n\n        while (covered.size() < right-left+1 && i<ranges.length){\n            \n            for (int j=left; j<=right; j++){\n\n                if (nums[i][0] <= j && j <= nums[i][1]){\n                    covered.add(j);\n                }\n\n            }\n\n            i++;\n        } \n\n        return covered.size() == right-left+1;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"check-if-all-the-integers-in-a-range-are-covered","has_notes":false,"flag_type":1}