{"id":1080588968,"question_id":671,"lang":"python3","lang_name":"Python3","time":"5Â months, 1Â week","timestamp":1697894147,"status":10,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/1080588968/","is_pending":"Not Pending","title":"Second Minimum Node In a Binary Tree","memory":"16.2 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def findSecondMinimumValue(self, root: Optional[TreeNode]) -> int:\n\n        if root==None:\n            return -1 \n\n        _min = root.val\n        res = 2**31\n        stack = [root]\n        \n        while stack:\n            \n            tmp = stack.pop()\n            if tmp.val > _min and tmp.val < res: \n                res = tmp.val\n\n            if tmp.left:\n                stack.append(tmp.left)\n            if tmp.right: \n                stack.append(tmp.right)\n\n        return res if res < 2**31 else -1\n\n            \n\n            \n\n            \n            \n        \n        \n        ","compare_result":"111111111111111111111111111111111111111","title_slug":"second-minimum-node-in-a-binary-tree","has_notes":false,"flag_type":1}