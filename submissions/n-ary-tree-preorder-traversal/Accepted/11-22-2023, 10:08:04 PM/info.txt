{"id":1104445146,"question_id":775,"lang":"java","lang_name":"Java","time":"4Â months","timestamp":1700687284,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1104445146/","is_pending":"Not Pending","title":"N-ary Tree Preorder Traversal","memory":"45.1 MB","code":"/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public List<Node> children;\n\n    public Node() {}\n\n    public Node(int _val) {\n        val = _val;\n    }\n\n    public Node(int _val, List<Node> _children) {\n        val = _val;\n        children = _children;\n    }\n};\n*/\n\nclass Solution {\n\n    public List<Integer> preorder(Node root) {\n\n        if (root==null){\n            return new ArrayList<Integer>();\n        }\n\n        List<Integer> res = new ArrayList();\n        List<Node> stack = new ArrayList<>();\n        stack.add(root);\n       \n        while(!stack.isEmpty()){\n\n            Node p = stack.remove(stack.size()-1);\n            res.add(p.val);\n            \n            for(int i=p.children.size()-1; i>=0; i--){\n\n                stack.add(p.children.get(i));\n\n            }\n\n        }\n\n        return res;\n\n    }\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"n-ary-tree-preorder-traversal","has_notes":false,"flag_type":1}