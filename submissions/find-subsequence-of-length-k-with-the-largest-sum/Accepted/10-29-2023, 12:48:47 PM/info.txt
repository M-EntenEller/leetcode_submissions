{"id":1086778038,"question_id":2204,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1698580127,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1086778038/","is_pending":"Not Pending","title":"Find Subsequence of Length K With the Largest Sum","memory":"43.3 MB","code":"import java.util.Arrays;\n\nclass Solution {\n\n    public int[] maxSubsequence(int[] nums, int k) {\n\n        int[] res = new int[k];\n\n        for (int i=0; i<k; i++){\n            res[i] = i;\n        }\n\n        for (int i=k; i < nums.length; i++){\n\n            int tmp_min = Integer.MAX_VALUE;\n            int tmp_idx = -1;\n\n            for (int j=0; j<k; j++){\n                \n                if (nums[res[j]] < tmp_min){\n                    tmp_min = nums[res[j]];\n                    tmp_idx = j;\n                }\n\n            }\n\n            if (nums[i] > tmp_min){\n                res[tmp_idx] = i;\n            }    \n\n        }\n\n        Arrays.sort(res);\n        for (int i=0; i<k;i++){\n            res[i] = nums[res[i]];\n        }\n\n        return res;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"find-subsequence-of-length-k-with-the-largest-sum","has_notes":false,"flag_type":1}