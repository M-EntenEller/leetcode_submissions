{"id":1106026576,"question_id":2416,"lang":"java","lang_name":"Java","time":"4Â months","timestamp":1700913776,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1106026576/","is_pending":"Not Pending","title":"Evaluate Boolean Binary Tree","memory":"43.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean evaluateTree(TreeNode root) {\n        \n        if (root.val < 2){ //leaf node.\n            return root.val == 1;\n        }\n\n        if (root.val == 2){\n            return evaluateTree(root.left) || evaluateTree(root.right);\n        } else{\n            return evaluateTree(root.left) && evaluateTree(root.right);\n        }\n\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"evaluate-boolean-binary-tree","has_notes":false,"flag_type":1}