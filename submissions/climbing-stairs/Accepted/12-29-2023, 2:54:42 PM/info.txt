{"id":1131415389,"question_id":70,"lang":"java","lang_name":"Java","time":"2 months, 4 weeks","timestamp":1703858082,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1131415389/","is_pending":"Not Pending","title":"Climbing Stairs","memory":"39.9 MB","code":"class Solution {\n\n    private int dps(int n, int[] memo){\n\n        if (n<=2){\n            return n;\n        }\n\n        int b1, b2;\n        \n        if ((b1=memo[n-2]) == 0){\n            b1 = dps(n-1, memo);\n        }\n        \n        if ((b2=memo[n-3]) == 0){\n            b2 = dps(n-2, memo);\n        }\n\n        memo[n-1] = b1 + b2;\n        return memo[n-1];\n\n    }\n\n    public int climbStairs(int n) {\n\n        int[] memo = new int[n];\n\n        return dps(n, memo);\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111","title_slug":"climbing-stairs","has_notes":false,"flag_type":1}