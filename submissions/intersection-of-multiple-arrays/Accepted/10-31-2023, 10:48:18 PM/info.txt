{"id":1088680409,"question_id":2331,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1698788898,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/1088680409/","is_pending":"Not Pending","title":"Intersection of Multiple Arrays","memory":"43.4 MB","code":"class Solution {\n\n    private Set<Integer> intersect(Set<Integer> x, Set<Integer> y){\n        \n        Set<Integer> res = new HashSet<Integer>();\n\n        for (Integer e : x){\n            \n            if (y.contains(e)){\n                res.add(e);\n            }\n\n        }\n\n        return res;\n\n    }\n\n    private Set<Integer> newSetFilled(int[] fill){\n        \n        Set<Integer> res = new HashSet<Integer>();\n\n        for (int i=0; i<fill.length; i++){\n            res.add((Integer) fill[i]);\n        }\n\n        return res;\n\n    }\n\n    public List<Integer> intersection(int[][] nums) {\n\n        Set<Integer> sect = newSetFilled(nums[0]);\n\n        for (int i=1; i<nums.length; i++){\n\n            Set<Integer> next = newSetFilled(nums[i]);\n            sect = intersect(sect, next);\n\n        }\n        \n        List<Integer> res = new ArrayList<Integer>(sect);\n        res.sort(null);\n        return res; \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"intersection-of-multiple-arrays","has_notes":false,"flag_type":1}