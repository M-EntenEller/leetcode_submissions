{"id":1082908152,"question_id":3055,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1698143455,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1082908152/","is_pending":"Not Pending","title":"Maximum Odd Binary Number","memory":"42 MB","code":"class Solution {\n    public String maximumOddBinaryNumber(String s) {\n\n        int n = s.length();\n        char[] res = new char[n];\n        int leads = -1;\n        \n        for(int i = 0; i<n; i++){\n\n            if (s.charAt(i) == '1'){\n                leads += 1;\n            }\n\n        }\n\n        for (int i=0; i<n-1; i++){\n            \n            if (leads > 0){\n                res[i] = '1';\n                leads--;\n            } else{\n                res[i] = '0';\n            }\n\n        }\n\n        res[n-1] = '1';\n\n        return new String(res);\n        \n    }\n}","compare_resulttitle_slug":"maximum-odd-binary-number","has_notes":false,"flag_type":1}