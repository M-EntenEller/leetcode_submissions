{"id":1092715469,"question_id":2433,"lang":"python3","lang_name":"Python3","time":"4 months, 3 weeks","timestamp":1699266753,"status":10,"status_display":"Accepted","runtime":"49 ms","url":"/submissions/detail/1092715469/","is_pending":"Not Pending","title":"Best Poker Hand","memory":"16.1 MB","code":"class Solution:\n    def bestHand(self, ranks: List[int], suits: List[str]) -> str:\n\n        def flush():\n\n            for i in range(1, len(suits)):\n\n                if not suits[i-1] == suits[i]:\n                    return False\n            \n            return True\n\n\n        def kinds():\n\n            max_kinds = 1\n            countMap = {}\n\n            for rank in ranks:\n\n                if countMap.get(rank) != None:\n                    countMap[rank] += 1\n                    max_kinds = max(countMap.get(rank), max_kinds)\n                else: \n                    countMap[rank] = 1\n\n            return max_kinds \n\n        if flush():\n            return \"Flush\"\n\n        kinds = kinds()\n        if kinds == 1: \n            return \"High Card\"\n        if kinds == 2:\n            return \"Pair\"\n        if kinds >= 3:\n            return \"Three of a Kind\"\n            \n\n\n                    \n\n            \n\n            \n\n            \n        \n        ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"best-poker-hand","has_notes":false,"flag_type":1}