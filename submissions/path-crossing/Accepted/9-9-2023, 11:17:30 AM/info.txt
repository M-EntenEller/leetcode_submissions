{"id":1044588141,"question_id":1619,"lang":"python3","lang_name":"Python3","time":"6 months, 2 weeks","timestamp":1694251050,"status":10,"status_display":"Accepted","runtime":"27 ms","url":"/submissions/detail/1044588141/","is_pending":"Not Pending","title":"Path Crossing","memory":"16.4 MB","code":"class Solution:\n    def isPathCrossing(self, path: str) -> bool:\n\n        visited_points = set()\n        active_point = (0,0)\n        visited_points.add(active_point)\n\n        def move(ap, c):\n            if c == \"N\":\n                return (ap[0], ap[1] + 1)\n            if c == \"S\":\n                return (ap[0], ap[1] - 1)\n            if c == \"E\":\n                return (ap[0] + 1, ap[1])\n            if c == \"W\":\n                return (ap[0] - 1, ap[1])\n\n        for c in path:\n            active_point = move(active_point, c)\n            if active_point in visited_points:\n                return True\n            visited_points.add(active_point)\n\n        return False\n\n\n\n\n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-crossing","has_notes":false,"flag_type":1}